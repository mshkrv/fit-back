version: '3.9'
name: fit-app

services:
  rabbitmq:
    image: rabbitmq:4.1-management-alpine
    container_name: fit-rabbit
    restart: unless-stopped
    env_file: ../.env.global
    ports:
      - '${RABBITMQ_PORT:-5672}:5672'
      - '${RABBITMQ_MANAGEMENT_PORT:-15672}:15672'
    volumes:
      - ./docker_datastore/rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq
    networks:
      - fit-net
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      timeout: 5s
      interval: 10s
      retries: 3
      start_period: 20s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    cpu_count: 1

  postgres:
    image: postgres:18-alpine
    container_name: fit-postgres
    restart: unless-stopped
    env_file:
      - ../.env.global
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    volumes:
      - ./docker_datastore/postgres_data:/var/lib/postgresql
    networks:
      - db-net
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}']
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    cpu_count: 1

  redis:
    image: redis:8-alpine
    container_name: fit-redis
    restart: unless-stopped
    env_file:
      - ../.env.global
    ports:
      - '${REDIS_PORT:-6379}:6379'
    volumes:
      - redis_data:/data
      - ./docker_datastore/redis_data/redis.conf:/etc/redis/redis.conf
    networks:
      - db-net
    command:
      - sh
      - -c
      - redis-server /etc/redis/redis.conf --requirepass $${REDIS_PASSWORD}
    healthcheck:
      test: ['CMD-SHELL', 'REDISCLI_AUTH=$${REDIS_PASSWORD} redis-cli ping']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    cpu_count: 1

  gateway:
    build:
      context: ../
      dockerfile: apps/fit-gateway/Dockerfile
    container_name: fit-gateway
    restart: unless-stopped
    env_file:
      - ../.env.global
      - ../apps/fit-gateway/.env.development
    ports:
      - '${PORT:-3000}:3000'
    networks:
      - fit-net
      - db-net
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    cpu_count: 1
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  rabbitmq_logs:
  redis_data:

networks:
  fit-net:
    driver: bridge
  db-net:
    driver: bridge
    internal: true